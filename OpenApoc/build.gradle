import java.security.MessageDigest

def signing = [
        enabled      : false,
        storeFilePath: '.keystore',
        storePassword: 'password',
        keyAlias     : 'alias',
        keyPassword  : 'password'
]

apply plugin: 'com.android.application'

if (file('signing.properties').exists()) {
    Properties properties = new Properties()
    properties.load(file("signing.properties").newDataInputStream())
    signing.enabled = properties.getProperty("signing.enabled")
    signing.storeFilePath = properties.getProperty("signing.storeFilePath")
    signing.storePassword = properties.getProperty("signing.storePassword")
    signing.keyAlias = properties.getProperty("signing.keyAlias")
    signing.keyPassword = properties.getProperty("signing.keyPassword")
    println("Signing configuration loaded")
}

def getFolder(res) {
    return file("src/main/jni/OpenApoc/${res}")
}
/*
tasks.withType(Zip) {
    zTask ->
        zTask.doLast {
            MessageDigest digest = MessageDigest.getInstance("MD5")
            digest.update(file(zTask.archivePath).bytes)
            def checksum = new BigInteger(1, digest.digest()).toString(16).padLeft(32, "0")
            new File(zTask.archivePath.toString() + ".md5").text = checksum
        }
}

task packData(description: 'Update data files.') {
    ['data'].each { String res ->
        def zip = task("zip" + res, type: Zip)
        zip.doFirst { println("Packing ${res}...") }
        zip.destinationDir = file('src/main/assets')
        zip.archiveName = "${res}.zip"
        zip.from getFolder(res)
        zip.into res
        zip.execute()
    }
}*/

task packData(description: 'Update data files') {
    ['data'].each { String res ->
        def cp = task("cp" + res, type: Copy)
        cp.doFirst { println("Copying ${res}...") }
        //cp.destinationDir = file("src/main/assets")
        cp.from getFolder(res)
        cp.into file("src/main/assets")
        cp.execute()
    }
}

build.dependsOn packData

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"


    externalNativeBuild {
        ndkBuild {
            path "src/main/jni/Android.mk"

        }
    }

    defaultConfig {
        applicationId "org.sfalexrog.openapoc"
        minSdkVersion 19
        targetSdkVersion 22
        versionCode = 1
        versionName = "1.0"

        externalNativeBuild {
            ndkBuild {
                arguments "NDK_APPLICATION_MK:=src/main/jni/Application.mk"
                abiFilters "armeabi-v7a", "x86", "x86_64", "arm64-v8a"
            }
        }

    }


    // Each buildType passes its own set of defines and optimization flags
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

android.lintOptions {
    abortOnError = false
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile 'com.android.support:support-v4:22.2.1'
    compile project(':aFileDialog')
}
